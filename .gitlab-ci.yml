stages:
- compile_project
- migrate_database
- test_project
- make_documentation
- build_docker_image
- deploy_to_servers

variables:
  GIT_SSL_NO_VERIFY: "true"
  RANCHER_DEV_URL: "http://10.141.11.53:8080"
  RANCHER_PROD_URL: "http://10.120.12.41:8080"
  HTTP_PROXY_FOR_PROD: "http://10.120.12.56:3128"
  HTTPS_PROXY_FOR_PROD: "http://10.120.12.56:3128"
  HTTP_PROXY_FOR_DEV: "http://10.141.11.57:3128"
  HTTPS_PROXY_FOR_DEV: "http://10.141.11.57:3128"
  RANCHER_STACK_NAME: "ihub"
  GITLAB_INFRASTRUCTURE_PROJECT_PATH: "integrations/ihub-grid"
  GITLAB_INFRASTRUCTURE_PROJECT_NAME: "ihub-sw-infrastructure"
  GITLAB_PROJECT_PATH: "integrations/ihub-grid"
  GITLAB_PROJECT_NAME: "ihub-sw"
  RANCHER_REST_WRAPPER_IMAGE: $CI_REGISTRY/integrations/ihub-grid/rancher-rest-wrapper:master
  CONTAINER_PHP_FPM_IMAGE_MASTER: $CI_REGISTRY/$GITLAB_INFRASTRUCTURE_PROJECT_PATH/$GITLAB_INFRASTRUCTURE_PROJECT_NAME:php-fpm-master
  CONTAINER_PHP_FPM_IMAGE_DEV: $CI_REGISTRY/$GITLAB_INFRASTRUCTURE_PROJECT_PATH/$GITLAB_INFRASTRUCTURE_PROJECT_NAME:php-fpm-dev
  CONTAINER_CODE_IMAGE: $CI_REGISTRY/$GITLAB_PROJECT_PATH/$GITLAB_PROJECT_NAME:$CI_BUILD_REF_NAME
  NEWRELIC_DEPLOYMENT_API_KEY: "72add31ff74c0f5d4e8fc61ba1c38ac38bdb0e6dc9f226e"
  NEWRELIC_DEPLOYMENT_APP_ID_DEV: "44669872"
  NEWRELIC_DEPLOYMENT_APP_ID_PROD: "42805419"


#====================== templates ======================#
.template_dev: &template_dev
  tags:
    - de2gl03d_dind_1
  only:
    - dev

.template_prod: &template_prod
  tags:
    - de2gl03p_dind_1
  only:
    - master
    - tags

.template_add_ssh_auth: &template_add_ssh_auth
  before_script:
    - mkdir ~/.ssh
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
    - git config core.sshCommand "ssh -i ~/.ssh/id_rsa -F /dev/null"
    - echo "$COMPOSER_INSTALL_PRIVATE_KEY" > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa || true

.template_compile: &template_compile
  <<: *template_add_ssh_auth
  stage: compile_project
  image: $CONTAINER_PHP_FPM_IMAGE_DEV
  cache:
    key: $CI_BUILD_REF_NAME
    untracked: true
    paths:
      - ./vendor
  artifacts:
    name: $CI_BUILD_REF_NAME
    paths:
      - ./
    expire_in: 1 hour

.template_migrate: &template_migrate
  stage: migrate_database
  image: $CONTAINER_PHP_FPM_IMAGE_DEV
  variables:
    GIT_STRATEGY: none
  artifacts:
    when: on_failure
    name: $CI_BUILD_REF_NAME
    paths:
      - ./storage/logs
      - ./.env
    expire_in: 1 hour
  script:
    - php artisan migrate

.template_test: &template_test
  stage: test_project
  image: $CONTAINER_PHP_FPM_IMAGE_DEV
  variables:
    GIT_STRATEGY: none
  artifacts:
    when: on_failure
    name: $CI_BUILD_REF_NAME
    paths:
      - ./tests/_output
      - ./storage/logs
      - ./.env.testing
    expire_in: 1 hour
  script:
    - ./vendor/bin/codecept run api
    - ./vendor/bin/codecept run functional
    - ./vendor/bin/codecept run unit

.template_build_docker_image: &template_build_docker_image
  stage: build_docker_image
  image: docker:latest
  variables:
    GIT_STRATEGY: none
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN gitlab.favorit:4567
    - rm -rf .git .gitlab-ci.yml .gitignore .env.example .gitattributes composer.json composer.lock phpspec.yml phpunit.xml readme.md
    - rm -rf ./tests ./run/dev ./run/prod
    - docker build -t $CONTAINER_CODE_IMAGE .
    - docker push $CONTAINER_CODE_IMAGE

.template_deploy: &template_deploy
  stage: deploy_to_servers
  image: $RANCHER_REST_WRAPPER_IMAGE
  variables:
    GIT_STRATEGY: none

#====================== END templates ======================#

fail_build_for_incorrect_branches:
  stage: compile_project
  variables:
    GIT_STRATEGY: none
  script:
    - echo "======= !!!!! ======= **************** ======= !!!!! ======="
    - echo "======= !!!!! ======= **************** ======= !!!!! ======="
    - echo "======= !!!!! ======= YOU MAKE MISTAKE ======= !!!!! ======="
    - echo "======= !!!!! === READ INFORMATION BELOW! ==== !!!!! ======="
    - echo "\n\n\n"
    - echo ">> Not corrected branch name. You should pass /^[a-zA-Z]{1,6}-[0-9]{1,4}-.*$/ << "
    - echo ">> Your current branch name is ${CI_BUILD_REF_NAME} <<"
    - echo "\n\n\n"
    - echo "======= !!!!! ======= **************** ======= !!!!! ======="
    - echo "======= !!!!! ======= **************** ======= !!!!! ======="
    - exit 1
  only:
    - /^(?![a-zA-Z]{1,6}-[0-9]{1,4}-).*$/
  except:
    - dev
    - master
    - tags

# ====================================== FEATURE ==================================

compile_feature:
  <<: *template_dev
  <<: *template_compile
  script:
    - export http_proxy=$HTTP_PROXY_FOR_DEV
    - export https_proxy=$HTTPS_PROXY_FOR_DEV
    - bash ./run/dev/make-configs.sh
    - chmod -Rf 777 ./storage && chmod -Rf 777 ./bootstrap/cache || true
    - rm -rf composer.lock
    - composer install --optimize-autoloader
  only:
    - /^[a-zA-Z]{1,6}-[0-9]{1,4}-.*$/

migrate_feature:
  <<: *template_dev
  <<: *template_migrate
  script:
    - php artisan migrate
  only:
    - /^[a-zA-Z]{1,6}-[0-9]{1,4}-.*$/

test_feature:
  <<: *template_dev
  <<: *template_test
  before_script:
    - export http_proxy=""
    - export https_proxy=""
    - bash ./run/dev/make-configs-for-tests.sh
  only:
    - /^[a-zA-Z]{1,6}-[0-9]{1,4}-.*$/

test_feature_e2e:
  <<: *template_dev
  <<: *template_test
  allow_failure: true
  before_script:
    - export http_proxy=""
    - export https_proxy=""
    - bash ./run/prod/make-configs-for-tests-mocks-off.sh
  only:
    - /^[a-zA-Z]{1,6}-[0-9]{1,4}-.*$/
# ====================================== END FEATURE ==============================

# ====================================== DEV ======================================

compile_dev:
  <<: *template_dev
  <<: *template_compile
  script:
    - export http_proxy=$HTTP_PROXY_FOR_DEV
    - export https_proxy=$HTTPS_PROXY_FOR_DEV
    - bash ./run/dev/make-configs.sh ${CI_PIPELINE_ID}
    - chmod -R 777 ./storage && chmod -R 777 ./bootstrap/cache || true
    - rm -rf composer.lock
    - composer install --optimize-autoloader

migrate_dev:
  <<: *template_dev
  <<: *template_migrate

build_docker_image_dev:
  <<: *template_dev
  <<: *template_build_docker_image

deploy_to_servers_dev:
  <<: *template_dev
  <<: *template_deploy
  script:
    - export RANCHER_URL=$RANCHER_DEV_URL && export RANCHER_ACCESS_KEY=$RANCHER_DEV_ACCESS_KEY && export RANCHER_SECRET_KEY=$RANCHER_DEV_SECRET_KEY
    - upgrade --environment dev-ihub --stack $RANCHER_STACK_NAME --service php-fpm --new-sidekicks0-image $CONTAINER_CODE_IMAGE
    - upgrade --environment dev-ihub --stack $RANCHER_STACK_NAME --service nginx --new-sidekicks0-image $CONTAINER_CODE_IMAGE
    - upgrade --environment dev-ihub --stack $RANCHER_STACK_NAME --service php-supervisor --new-sidekicks0-image $CONTAINER_CODE_IMAGE
    - export http_proxy=$HTTP_PROXY_FOR_DEV
    - export https_proxy=$HTTPS_PROXY_FOR_DEV
    - apk add --update curl
    - >-
      curl -X POST "https://api.newrelic.com/v2/applications/${NEWRELIC_DEPLOYMENT_APP_ID_DEV}/deployments.json"
      -H "X-Api-Key:${NEWRELIC_DEPLOYMENT_API_KEY}" -i
      -H 'Content-Type: application/json'
      -d
      "{
      \"deployment\": {
      \"revision\": \"${CI_PROJECT_NAME}-${CI_COMMIT_REF_NAME}-${CI_PIPELINE_ID}\",
      \"changelog\": \"\",
      \"description\": \"https://gitlab.favorit/$GITLAB_PROJECT_PATH/$GITLAB_PROJECT_NAME/pipelines/${CI_PIPELINE_ID}\",
      \"user\": \"${GITLAB_USER_EMAIL}\"
      }
      }"

# ====================================== END DEV ===================================

# ====================================== PROD ======================================

compile_prod:
  <<: *template_prod
  <<: *template_compile
  image: $CONTAINER_PHP_FPM_IMAGE_MASTER
  script:
    - echo "============================"
    - echo "Changes between previous tag"
    - git log --oneline $(git for-each-ref --sort=taggerdate --format '%(tag)' | tail -1)..HEAD | grep ".* Merge branch '[a-zA-Z]\{1,6\}-[0-9]\{1,4\}-.*' into 'master'" || true
    - echo "============================"
    - export http_proxy=$HTTP_PROXY_FOR_PROD
    - export https_proxy=$HTTPS_PROXY_FOR_PROD
    - bash ./run/prod/decode.sh
    - bash ./run/prod/make-configs.sh ${CI_PIPELINE_ID}
    - chmod -R 777 ./storage && chmod -R 777 ./bootstrap/cache || true
    - rm -rf composer.lock
    - composer install --optimize-autoloader
    - php artisan route:cache

test_on_dev_configs_prod:
  <<: *template_dev
  <<: *template_test
  image: $CONTAINER_PHP_FPM_IMAGE_MASTER
  before_script:
    - export http_proxy=""
    - export https_proxy=""
    - bash ./run/prod/make-configs-for-tests.sh
  only:
    - master
    - tags

test_on_dev_configs_e2e_prod:
  <<: *template_dev
  <<: *template_test
  image: $CONTAINER_PHP_FPM_IMAGE_MASTER
  allow_failure: true
  before_script:
    - export http_proxy=""
    - export https_proxy=""
    - bash ./run/prod/make-configs-for-tests-mocks-off.sh
  only:
    - master
    - tags

build_docker_image_prod:
  <<: *template_prod
  <<: *template_build_docker_image

manual_deploy_to_servers_system_prod:
  <<: *template_prod
  <<: *template_deploy
  script:
    - export RANCHER_URL=$RANCHER_PROD_URL && export RANCHER_ACCESS_KEY=$RANCHER_PROD_ACCESS_KEY && export RANCHER_SECRET_KEY=$RANCHER_PROD_SECRET_KEY
    - upgrade --environment ihub --stack $RANCHER_STACK_NAME --service php-fpm-system --new-sidekicks0-image $CONTAINER_CODE_IMAGE
    - upgrade --environment ihub --stack $RANCHER_STACK_NAME --service php-supervisor --new-sidekicks0-image $CONTAINER_CODE_IMAGE
  when: manual

#manual_deploy_to_servers_pre_prod:
#  <<: *template_prod
#  <<: *template_deploy
#  script:
#    - export RANCHER_URL=$RANCHER_PROD_URL && export RANCHER_ACCESS_KEY=$RANCHER_PROD_ACCESS_KEY && export RANCHER_SECRET_KEY=$RANCHER_PROD_SECRET_KEY
#    - upgrade --environment ihub --stack $RANCHER_STACK_NAME --service php-fpm-pre-prod --new-sidekicks0-image $CONTAINER_CODE_IMAGE
#    - upgrade --environment ihub --stack $RANCHER_STACK_NAME --service nginx-pre-prod --new-sidekicks0-image $CONTAINER_CODE_IMAGE
#  when: manual

manual_deploy_to_servers_all_prod:
  <<: *template_prod
  <<: *template_deploy
  script:
    - export RANCHER_URL=$RANCHER_PROD_URL && export RANCHER_ACCESS_KEY=$RANCHER_PROD_ACCESS_KEY && export RANCHER_SECRET_KEY=$RANCHER_PROD_SECRET_KEY
    - upgrade --environment ihub --stack $RANCHER_STACK_NAME --service php-fpm --new-sidekicks0-image $CONTAINER_CODE_IMAGE
    - upgrade --environment ihub --stack $RANCHER_STACK_NAME --service nginx --new-sidekicks0-image $CONTAINER_CODE_IMAGE
    - upgrade --environment ihub --stack $RANCHER_STACK_NAME --service php-fpm-system --new-sidekicks0-image $CONTAINER_CODE_IMAGE
    - upgrade --environment ihub --stack $RANCHER_STACK_NAME --service php-supervisor --new-sidekicks0-image $CONTAINER_CODE_IMAGE
#    - upgrade --environment ihub --stack $RANCHER_STACK_NAME --service php-fpm-pre-prod --new-sidekicks0-image $CONTAINER_CODE_IMAGE
#    - upgrade --environment ihub --stack $RANCHER_STACK_NAME --service nginx-pre-prod --new-sidekicks0-image $CONTAINER_CODE_IMAGE
    - export http_proxy=$HTTP_PROXY_FOR_PROD
    - export https_proxy=$HTTPS_PROXY_FOR_PROD
    - apk add --update curl
    - >-
      curl -X POST "https://api.newrelic.com/v2/applications/${NEWRELIC_DEPLOYMENT_APP_ID_PROD}/deployments.json"
      -H "X-Api-Key:${NEWRELIC_DEPLOYMENT_API_KEY}" -i
      -H 'Content-Type: application/json'
      -d
      "{
      \"deployment\": {
      \"revision\": \"${CI_PROJECT_NAME}-${CI_COMMIT_REF_NAME}-${CI_PIPELINE_ID}\",
      \"changelog\": \"\",
      \"description\": \"https://gitlab.favorit/$GITLAB_PROJECT_PATH/$GITLAB_PROJECT_NAME/pipelines/${CI_PIPELINE_ID}\",
      \"user\": \"${GITLAB_USER_EMAIL}\"
      }
      }"
  only:
    - tags
  when: manual

# ====================================== END PROD ==================================
